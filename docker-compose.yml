services:
  adminer:
    image: adminer
    restart: always
    environment:
      - ADMINER_DESIGN=pappu687	
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - postgres
    ports:
      - 8080:8080
    networks:
      - db

  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - ${DATABASE_PORT}:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - db

  back:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - ${API_PORT_EXTERNAL}:${API_PORT_INTERNAL}
    env_file:
      - ./.env
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - backend
      - db


  front:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules

networks:
  backend:
    driver: bridge
  db:
    driver: bridge

volumes:
  postgres-data:
